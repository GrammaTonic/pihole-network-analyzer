name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      timeout-minutes: 3
      
    - name: Verify dependencies
      run: go mod verify
      timeout-minutes: 1
      
    - name: Run tests
      run: |
        echo "Building DNS analyzer..."
        go build -o dns-analyzer .
        echo "Running test suite..."
        ./dns-analyzer --test
      timeout-minutes: 6
        
    - name: Check code formatting
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not properly formatted:"
          gofmt -s -l .
          exit 1
        fi
      timeout-minutes: 1
        
    - name: Run go vet
      run: go vet ./...
      timeout-minutes: 2

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Run govulncheck
      run: |
        echo "Installing govulncheck..."
        go install golang.org/x/vuln/cmd/govulncheck@latest
        echo "Running vulnerability check..."
        govulncheck ./...
      timeout-minutes: 5

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, security]
    timeout-minutes: 15
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      timeout-minutes: 3
      
    - name: Build multi-platform binaries
      run: |
        echo "Building for multiple platforms..."
        # Linux builds
        GOOS=linux GOARCH=amd64 go build -o dns-analyzer-linux-amd64 .
        GOOS=linux GOARCH=arm64 go build -o dns-analyzer-linux-arm64 .
        # Windows builds
        GOOS=windows GOARCH=amd64 go build -o dns-analyzer-windows-amd64.exe .
        GOOS=windows GOARCH=arm64 go build -o dns-analyzer-windows-arm64.exe .
        # macOS builds
        GOOS=darwin GOARCH=amd64 go build -o dns-analyzer-darwin-amd64 .
        GOOS=darwin GOARCH=arm64 go build -o dns-analyzer-darwin-arm64 .
        echo "All platform builds completed"
      timeout-minutes: 8
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dns-analyzer-binaries
        path: |
          dns-analyzer-linux-*
          dns-analyzer-windows-*.exe
          dns-analyzer-darwin-*
