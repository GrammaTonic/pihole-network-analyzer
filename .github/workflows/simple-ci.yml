name: Test and Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    name: Test and Build DNS Analyzer
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download Go modules
      run: go mod download
      timeout-minutes: 3
      
    - name: Verify Go modules
      run: go mod verify
      timeout-minutes: 1
      
    - name: Build application
      run: |
        echo "🔨 Building DNS Analyzer..."
        go build -v -o dns-analyzer .
        echo "✅ Build successful!"
      timeout-minutes: 3
        
    - name: Run test suite
      run: |
        echo "🧪 Running comprehensive test suite..."
        ./dns-analyzer --test
        echo "✅ All tests passed!"
      timeout-minutes: 6
        
    - name: Test configuration system
      run: |
        echo "⚙️ Testing configuration system..."
        ./dns-analyzer --create-config
        ./dns-analyzer --show-config
        echo "✅ Configuration system working!"
      timeout-minutes: 2
        
    - name: Verify code formatting
      run: |
        echo "📝 Checking code formatting..."
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "❌ Code is not properly formatted:"
          gofmt -s -l .
          exit 1
        else
          echo "✅ Code is properly formatted!"
        fi
      timeout-minutes: 1
        
    - name: Run static analysis
      run: |
        echo "🔍 Running static analysis..."
        go vet ./...
        echo "✅ Static analysis passed!"
      timeout-minutes: 2
        
    - name: Test with sample data
      run: |
        echo "📊 Testing with sample data..."
        if [ -f "test.csv" ]; then
          ./dns-analyzer --test-mode test.csv
          echo "✅ Sample data analysis successful!"
        else
          echo "ℹ️ No test.csv found, using mock data test"
          ./dns-analyzer --test-mode test_data/mock_dns_data.csv
        fi
        
    - name: Build for multiple platforms
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        echo "🌍 Building for multiple platforms..."
        
        # Linux builds
        GOOS=linux GOARCH=amd64 go build -o dns-analyzer-linux-amd64 .
        GOOS=linux GOARCH=arm64 go build -o dns-analyzer-linux-arm64 .
        
        # Windows builds  
        GOOS=windows GOARCH=amd64 go build -o dns-analyzer-windows-amd64.exe .
        GOOS=windows GOARCH=arm64 go build -o dns-analyzer-windows-arm64.exe .
        
        # macOS builds
        GOOS=darwin GOARCH=amd64 go build -o dns-analyzer-darwin-amd64 .
        GOOS=darwin GOARCH=arm64 go build -o dns-analyzer-darwin-arm64 .
        
        echo "✅ Multi-platform builds completed!"
        ls -la dns-analyzer-*
        
    - name: Upload build artifacts
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: dns-analyzer-builds
        path: |
          dns-analyzer-*
        retention-days: 30
